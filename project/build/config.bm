<?xml version="1.0" encoding="utf-8" ?>
<BuildMaster>
    <Settings>
        <Setting name="ProjectName" value="NinjaGirl"/>
		<Setting name="WorkingDirectory" value=".."/> <!-- root of the project folder -->
		
		<!-- paths are relative to the WorkingDirectory -->
		<!-- customize these to your setup -->

		<Setting name="dailyVersionsFolder" value="..\dailyversions" />

		<Setting name="devkitSmsPath" value="../../../devkitSMS-master"/>
		<Setting name="outFolder" value="out"/>
		<Setting name="UseVisualStudioStylePaths" value="true"/>
		<Setting name="resourceInfoExportFolder" value="source/client/generated" />
    </Settings>

	<Tools>
		<Tool name="gg2c" path="..\..\..\..\GenDev\Projects\gg2c\Release\gg2c.exe" flags="-sms -updateonly" info="Export Animations"/>
		<Tool name="tmx2c" path="..\..\tmx2c\bin\tmx2c.exe" info="Export backgrounds"/>
		<Tool name="gal2tmx" path="..\..\gal2tmx\bin\gal2tmx.exe" info="Export theme backgrounds and tilesets"/>
			
		<!--
		<Tool name="gal2tmx" path="..\..\gal2tmx\bin\gal2tmx.exe" info="Export theme backgrounds and tilesets">
			<extradestinationfolder flag="-tilesetdest" clean="false"/>
			<extradestinationfolder flag="-animationdest" clean="false"/>
		</Tool>
		-->
	</Tools>
	
	<!-- Tool Jobs are run in the order they're listed. -->
	<ToolJobs>
		<ToolJob tool="gal2tmx" source="assets\backgrounds" destination="gamedata\maps" tilesetdest="source\client\generated" extraflags="-tilesetdest source\client\generated -tiletypes assets\tiletypes\tiletypes.gal" bank="3" />
		<ToolJob tool="gal2tmx" source="gamedata\animations\*.animatedtileset.gal" destination="gamedata\maps" extraflags="-tilesetdest source\client\generated -tiletypes assets\tiletypes\tiletypes.gal" bank="3" />
		<ToolJob tool="gg2c" source="gamedata\animations" destination="source\client\exported\animations" bank="2"/>
		<ToolJob tool="tmx2c" source="gamedata\maps" destination="source\client\exported\maps" bank="4"/>
	</ToolJobs>

	<!--
	
	after performing tool jobs,
		go through the source filenames
		create a stored_resources.h
		list all the resources as extern StoredResources
		create a stored_resources.c
		list all the resources as StoredResources
		update every build
	
	banked_resources.h
		typedef struct StoredResource
		{
			u16 bankNumber;
			Resource* resource;
		}
		
		extern StoredResource explosionStoredResource;
		
	banked_resource.c
		#include "animations\explosion.h"
	
		StoredResource explosionStoredResource
		{
			2, // bank number
			(const Resource*)explosion, // animation resource
		}
	-->
	
	<Include path ="source"/>
	<Include path ="source/engine"/>

	<!-- Source set order is important. A file found in one source set will not be added to subsequent source sets -->
	<!-- Source sets are created from tool jobs. They always go first -->

	<SourceSet bank="3">
		<Source path = "source/client/generated/*_tileset.c"/>
	</SourceSet>

	<SourceSet>
		<Source path = "source/client"/>
		<Source path = "source/client/exported"/>
		<Source path = "source/client/generated"/>
		<Source path = "source/client/objects"/>
    </SourceSet>

	<SourceSet>
		<Source path = "source/engine"/>
	</SourceSet>


</BuildMaster>


<!--

TODO

DONE build a list of destination folders from the entries

DONE use this list to
	- build the list of destination folders for the makefile to create
	- clean generated .c files
		what about the files that don't get generated automatically?
	
if the source is a file, set it apart from any entries that use the directory its in	
	
set banking info per entry

process assets

-->