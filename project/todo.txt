Todo

	how to make it so that a broken block gets a custom animation?
		breakable tilesets have a function and a resource
		<tileset>_collisionFunction
		how to define the resource? 
			<tileset>_collisionResource?
				does it have to be an animation?
					it doesn't.
					it can be any type of resource


	particle system
	
		array of 16 tracked particles
			screen x
			screen y
			update function
			speed x
			speed y 
			animation counter
			animation
			update function
			
		what's the diff between this and just having 32 effect objects?

	collision check mid-way on player	


	
	why does breakable rock have an extra tile and an extra block?
	

	player top/bottom animations
	
	performance pass

		improve buildcolumn performance
			do a bit every frame
			
			I already know how many tiles I have to update

		unroll loop to update terrain buffer

	banks!

	thingie that contains items
		lamp?
		balloon?
		enemy?
		
	game object templates
		animation
		health
		etc.
		
	hidden items
		trigger bounding box
		when hit enough
		call setVisbielTrue() on hidden item
		
	boss drops
		upgrade items 
		coins
		
		choose one

	hearts
	
	coins

	
	
	that thing where I swap in and out parts of the background
		the ground and the sky need to be separate tilesets
		
		build a map out of multiple tilesets
		
		ground/sky/animated

		
	make gg2c not suck
	make gal2tmx not suck	
		
	player movement
	
		ducking
		
	compress map data
		
	store map data column first
	
	don't do everything at the same time during vblank
		- update player animation
		- update animated tiles
		- modify map tiles
		- animate tile-based objects
		- etc.
	
	
	1	
	
	clipping????
	
		regular animations
		
		batched animations
	
		gg2c, on export, sort sprites in a frame by X position
			then clip by x position
	
	
	destroying an object should just set its update and draw functions to appropriate doNothing()

	NAH tilesets should contain their paletes
	
	automated creation of header file with object_type_ids
		header file with #defines of GAMEOBJECT_PLAYER_ID
		array of create functions in ROM
		"last checked" compares against time stamps of all cpp files with GAME_OBJECT_CREATE tag 
			if older than at least one of the animations, rebuild.
	
	automated creation of header file with VDPtileLocations (and animations?)
		array of VDPTileLocations in ram
		array of animations in rom
		header file with #defines PLAYER_ANIMATION_ID
		"last hecked"

	work in points

	place game objects on the map
	
	optimization pass
		object manager
			no loops
			no array
				just five objects
		scroll manager
			unroll rool to fill buffer
			or assembly?
				ask chat gpt

	add player standing state
	add player moving state
	
	player collisions
	physics
	
	clipping
	

	slopes?
	
	create assert 
		black screen?
		print message
			file/line


Idea Backlog 

	update ideas
	
		double jump
		slide (with invincibility frames)
		shoot up
		shoot eight directions
		option/familiar
		stronger projectiles
		health upgrade
		extra kunai (start with two, get a third one)
		hold to float down
		

	spawn info has id of object type instead of pointer to create function
		automatic generation of gameobject_id.h from scanning header files

	BMS backup action? 
		
			copy backup locations	



	try the SDCC Visual Studio project
		maybe debugging works well?

	add player jumping state
	
	update player tiles

	if press attack button near enough to an enemy, do a slash attack
		
	
	add player shooting state
		
	player projectiles
	player shooting animation
		contra run + shoot style?
		
	fire up/diagonal/down
		round projectiles means fewer tiles taken, but not as cool
		as shuriken		
	
	queue of vdp tile updates
		
	better jump frame?
	better run animation?
	
	enemy
	enemy collisions	
	game object library
	
	object manager
		player + projectiles + enemies + interactables
		
		small arrays to handle different types. no generic system.
		
	how to use banked roms?
		
	animated tiles
	
	automated on-demand/on-dirty conversion of gamedata to c on build 
		
	automatic building of level build function per map
		loads all background and sprite tiles
		places player
	
	
	improve map scrolling performance

	music
	sound effects

	
Game Design Ideas	
	
	enemy types
		popcorn
		flying
		running
		bouncing
		peek-a-boo
		coming out of holes
		throwing/shooting from afar
		
	upgrades
		double jump
		slide
		familiar (doubles shooting shurikens)
	
	boss
	
effects

	rain	
	
Completed

	DONE don't destroy a 16x16 tile if it's not entirely on screen
		otherwise it creates holes on the left side of the screen

	DONE rename terrain types back to tile types

	DONE remove most slopes types from tile types
	
	DONE use 4 bits for terrain type
	
	DONE use 3 bits for tileset id
	
	DONE use helper defines/functions
	
	DONE use defines for shift amounts

	DONE change all animations to have a pointer to the next animation
	
	DONE update player sprite tiles when moving
	
	DONE stream in animations
	
	DONE animated tile shit

	DONE multiple tile sets


		how to better specify how many tiles to update?
		
		how to animate multiple types of tiles?
	
			go back to how the Genesis worked?


	DONE Turn left 

	DONE collision map too much? use the map instead?
		use bigger bit flags?

	DONE destructable tiles
		collide with a 32x24 terrain buffer and not the map
		terrain buffer is u8 ?

	DONE animated tiles
		rework the tooling so that 
			- water tiles are a separate tileset
			- a map can contain multiple tilesets
			- tilesets are stored/loaded contigously

		upload animated tiles to vdp using UNSAFE_SMS_load4Tiles()
		
	DONE post animated tiles rework		
	
		test loading 4 tilesets
	
		how to tell the map that an animated tileset uses X number of tiles?

	NAH player is looping past 16k on the x coordinate

		32bit player pos -> 8 bit screen pos
		
		convert entities to do the same

	


	DONE fix kunai disappearing early if we scrolled the level

	DONE move player

	DONE top-solid collisions


	BLEH anti-flicker strategy


	DONE add impact sound effect
	DONE add explosion sound effect
	DONE better throw sound

	DONE add effects objects to object manager
	
		tile_animator
		bird

	DONE convert everything_spawner to new command_runner
	
	DONE rename spawn_types to command_types
	
	DONE CreateInfo to ObjectCreateInfo ? 
	
	DONE rename command_runner to rightscroll_command_runner;

	DONE make tile_animation work correctly
	
	DONE load resources as part of the spawn list
	
		background palette
		sprite palette
		map 
		
	DONE spawn list format
		byte blob
			define in a file that gets exported
	
		counter
		action type
		data

	DONE animated tiles	

	NAH speed up animation update


	DONE sprite animations that draw into the background
	
	DONE animation type
	
		regular
		batched
		plane

	DONE vgm pipeline
	
	
		batch exporter
		
			pass root folder
			
				list the files in 
					root
					channel2
					channel3
					channel23
			
			optional newer check: 
			
				for each psg, check if the dmf is newer
					
					if newer, stop
	

			processing
			
				create temp folder

				for each psg use PSG tool and create to temp folder
				
				use assets2banks.exe to export to .c and .h files
				
					
			
				


	DONE test out music and sound effects
	
	how to make a sound effect
	
		make the effect
	
			create a new song in Deflemask
			
			use SN3 or SN4 channels or both
			
			add an OFF note (using the Tab key) at the end of the effect
			
			use the rows
			
			save as vgm
			
			save file
			
		compress the vgm
		
			use PSGTool
			
				java -jar PSGTool.jar hit.vgm 3
				
				use 2 or 3 or 23 to indicate which channels the effect uses
				
				Mapping:
				Deflemask -> PSGLib Channel
				SN3		  -> 2
				SN4		  -> 3
				
		convert to banks C header and source files 
		
			<path/>assets2banks.exe <source_path> [--allowsplitting]
		
			ex: 
				C:\Dropbox\SegaMasterSystem\devkitSMS-master\assets2banks\Windows\assets2banks.exe psg --allowsplitting
	

			the current path is the destination path
			
		integration into the game code
		
			bring the banks*.h and .c files into the solution		

	DONE improve scroll performance
	
	DONE destroy enemy when offscreen
	
	DONE draw projectiles
	
	DONE collisions with projectiles
	
	DONE basic collisions
	
	DONE use 8x16 tiles
	
	DONE test out using the draw2 and draw3 sprite functions
	
	DONE create a draw4 sprite function
	
		new sprite format
			
			function, x, y, tile
			
			
			function 0
				finished? 
				
			function1 
				draw one tile
			function 2
				draw two tiles
			function 3
				draw three tiles
			function 4
				draw four tiles

	DONE have a spawner object
	
	DONE create a spawn right objects

	DONE split source files into folders
		game
		engine
		
		update makefile



	BuildMasterSystem
	
		DONE copy to daily folder action

	BuildMasterSystem
	
		gg2c
		
			DONE add message when there's nothing to be done
			DONE check if the file should be exported
			
		BMS
						
			DONE don't show the powershell output text?
			DONE show the steps?
			DONE add parameters to config about how to call make

	

	DONE create types.h file

		convert to use types.h file
		
		is int 32 bits or 16?

	DONE create objecttypes.h file
	
		GameObject	
		
		
	DONE Make a todo.txt
		
	DONE destroy objects according to visibility criteria
		totally to the left
		offscreen

	DONE clip sprite drawing		
	
	DONE clean up changes to optimization
	
	BLEH move draw function to object update?	