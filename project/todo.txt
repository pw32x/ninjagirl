Todo

	
	DONE add enemy projectile type
		
	DONE use Graphics Gale layers for different draw calls
		complex explosions
		player ponytail
		spark effects
		flying debris
		smoke trails
		
	NAH make the clouds only be on top
		or, make standalone puffy clouds
		remove the duplicate tiles that have clouds in them
		REASON
			I suck at clouds
			there wasn't much of a savings
		
	DONE re-add some of the elements of the old tile set into the new one
		
	DONE fix the collision areas in updated field
	
	DONE sketch out idea for the level and player intro
		
	DONE why am I using two different variables for the player?
		and two different point spaces?
		
	update devkitSMS
	
		DONE don't forget to integrate my changes
		
		DONE disable zoomed sprites
		
		DONE test out the current version
		
		DONE remove my versions of the functions
		
		DONE try metasprites

	DONE how to reduce self time in DrawUtils_draw?
		

	optimize updating the scroll column
	
		DONE add option to export map as a series of columns
		DONE without metatile stuff
		NAH array of bytes, max 256 tiles
	
		NAH remove all the metatile stuff
		
		DONE don't use multiplication in RightScroll_Update_Strip and TerrainManager_UpdateTerrain_Strip
			increment when hitting a new column
		
		WHAT export a plain map

	DONE turn on projectiles again
	
	
		_ObjectManager_CreatePlayerProjectile	2282	2282	1	4594/4594/4594.0
		
		_ObjectManager_CreatePlayerProjectile	1612	1612	1	3924/3924/3924.0		
		_ObjectManager_CreateObjectByCreateInfo	24547	24547	22	1099/4414/3231.4 // worst case
		
		
		_ObjectManager_CreatePlayerProjectile	3218	3218	2	3921/3921/3921.0
		
		_ObjectManager_CreatePlayerProjectile	1611	1611	1	3923/3923/3923.0
		_ObjectManager_CreatePlayerProjectile	30819	30819	23	402/4059/3048.8 // worst case
		
		_ObjectManager_CreateObjectByCreateInfo	1468	1468	1	4118/4118/4118.0
	
	benchmark projectile spawn
	
	make it so that objects don't get updated until the next frame
	
		setup new objects, but don't update them
			don't draw
				setup animation durnig PendingUpdateFunction?
			or lightweight update
				
				PendingUpdateFunction
					switches to real update function when run
					real update function comes from template
	
		update effects
		update enemies
			can spawn effects
			can spawn new enemies
		update projectiles 
			can spawn effects
		update enemy projectiles
			can spawn effects
			can spawn enemies
		player
			can spawn effects
			can spawn projectiles
		update command manager
			can spawn enemies
			can spawn objects
			
		draw
			enemies
			projectiles
			enemy projectiles
			player
			pick up
			effects
	
	#define ACTION_REMOVE 	0
	#define ACTION_ADD 		1
	
	typedef struct
	{
		u8 index;
		u8 action;
	} GameObjectChange;
	
	#define MAX_ENEMIES 8
	GameObject enemies[MAX_ENEMIES];
	GameObject** activeEnemies[MAX_ENEMIES];
	u8 enemyDeletes[MAX_ENEMIES]; 
	GameObject* enemyAdds[MAX_ENEMIES]; 
	
	cases 
	
		add
	
			command runner 
				spawn enemy
				
			enemy
				spawn child enemy

		remove
		
			enemy dies/offscreen
		
	object manager update
	
		spawnobject
			find new_location
				find hole in enemies[] // search from 0 to MAX_ENEMIES - 1 for active == FALSE. 
					Start at last insertion
			init enemies[new_location]
				copy data, etc.
			add to enemyAdds(&newObject)
			
		destroyobject
			enemies[location]->active = FALSE
			add to enemyDeletes(location)
		
		while (num enemy deletes)
			update active enemies
			
	
	[... rest of the frame ...]
	
		
	
	[... rest of the frame ...]
		
	while (num enemy ads)
		update active enemies
	



	delete while going through active objects
		
		object has index to active object array
		
		update objects
		
			mark start locatoin
			go through until end
				while counter < end
				
					if delete
						copy the pointer at start location to deleted location
						move start location to next item
						decrement object count

			set start location to end location
				invert direction
				
			
					
			
		ObjectManager_Delete
			copy pointer at start point to delete point
			if going up, move start point up
			if going down, move start point down
			direction (1 or -1)
				start += direction
				
	new objects array[8]
	deleted active index array[8]
	new counter = 0
	delete counter = 0
	search start ptr

	add object
		find hole (circular search from lsearch start ptr)
		setup
		add ptr to obj to new list
		increment new counter
		set search start ptr

	delete object
		add active index to delete list
		increment delete counter
		set search start ptr
		

	if delete counter
		just go through the object list
		and rebuild the active list

		
	[rest of frame]
	
	while add counter
		go through add list
		add counter--
		
	======================
	
	for every type...
	
		add object
			find hole (circular search from lsearch start ptr)
			setup
			set active flag to pending
			increment new counter
			set search start ptr + 1
			add to new objects
			increment new object count
			
		delete object
			set active to false
			set delete flag to true
			set search start ptr		
			
		if delete flag
			rebuild the active list with active objects
			
			
			
		while new object count
			append the new objects
			set active flag to true
			new object count--;
		
		
	benchmark project update
	
	bechmark
		DONE create bullet
		DONE create effect
		DONE create enemy
		DONE process bullet deletes
		DONE process effect deletes
		DONE process enemy deletes
		NAH update bullet
		NAH update effect
		
		DONE process new objects
		
	can I mark no-parameter functions so that they run faster?
	

	benchmark enemy-projectile collisions
	
	optimize enemy-projectile collisions

	enemy-player collisions
	
	per-frame animation function?
	
	optimize ObjectManager_Update
	
		break apart into multiple files
	
	performance pass...

		the game idling with just the player takes 40% of the CPU
		
		the game with one enemy takes 50% of the time
	
		collisions are especially slow
		
		max number of active sprites?
			the spawner checks the limit?
				but only for enemies, not triggers, etc.

	work on tool to determine data sizes in banks from .map file


	tool to animate paths
		export to Motion Sequence or AI Sequence
		- draw paths
		- draw animation from capturing the mouse

	graphics gale frame layers indicate if they're background tiles
		so to have mixed animations
		fixed cannons  with moving turrets or something

	animate player entrace
	
	animate scene open
		slice screen in half at an angle,
		then the scene opens while the two halves move towards the sides of the screen
		
	use animation visible area, not collision area, for visibility
		per frame?


	how to specify collision box of moving animation?
		example: base falling from the sky
		animation has array of collision boxes
		it can be null for those that don't need/want it
	
	base falling from the sky
		lands on ground, blends into background tiles
		smoke effects
		launches mini enemies
		explodes + leaves crater or rubble

	make player move relative to the terrain instead of the world?
		make the game objects do the same?
		or use u16 for x position and not s16?

	NAH explosions as animation sequences
		reuse the explosion animation, but have different types of explosions
		sequence has payload?
			sequence:
				array of resources to use
				num resources
				sequence items
					time, num items
						x, y, animation resource index, frame number // sort by animation for less bank switching
						x, y, animation resource index, frame number
					time, num items
						x, y, animation resource index, frame number
						x, y, animation resource index, frame number
						x, y, animation resource index, frame number
						x, y, animation resource index, frame number
						



	enemy bullet - player collisions
		
	enemies add themselves to the list of things the player needs to test colisions against
		the player doesn't need to collide with every enemy every frame
		
	enemies add themselves to the list of things the projectiles need to test collisions against

	trigger area to clear sprite tiles. and to reload new ones
	
	object states
	
		spawn object in a certain state
		expose available states
		how to set states in SceneMaster?
		CreateInfoWithState ?
		Declare available states in template
		
	SceneMaster
	
		set data to an object, like a motion path

	Motion Master
		more complex motion path for delivery robot		
			flies in, waits, flies out


	Work with resourcesinfos and not resources so to better handle banking
	
	have a function that uses a resource switch to that bank before doing anything
	in the bank switch function, cache the bank and check it before doing the switch

	
	game/level handling
	
		lives
		
		lives pick up
		
		lives hud indicator
		
		lose life
		
		death pits
		
		respawn
			don't respawn on top of a hole
			
		spawn in animation
		
		enemy-player collisions	
	
		level has intro action
			opening doors

	Motion Master
	
		build motion paths by capturing mouse movement

	PAUSE animation sequencer
		explosion sequences
		AnimationSequencePack
			array of animation sequences
			
			animation sequence
				array of 
					time, function, value, control (go to next immediate, wait until next tick, jump, frame end)
					  u8,      u16,   u16,     u16
					functions
						set animation frame
						jump to sequence index
						trigger (die, effect, etc)
		
	PAUSE animation sequencer is another type of animation
		
	make explosion cooler
		multiple with particle effects
			explore 3x3 with four frames
	
	make bullets cooler
	
	make bullets have only one point as collision


	game level
	
		enemy AI


	fight for portal/trigger/something to go to next area


	

	tiled enemies use second palette?
		or backgrounds use their own palette?
		
	export Graphics Gale layers to separate files
		player
			gun_girl_bottom.gal
			gun_girl_top.gal
			gun_girl_ponytail.gal

		build a resource packs out of them

	draw player in parts

		legs
	
		torso

			move player torso when shooting?
				Contra: up and down
				Gunstar Heroes: only the arms move
	

		ponytail
			
			animate when jumping, running
	

		
	sprties
	
		slow tall enemy
		
		pod that opens and deploys enemy
			flying enemy
			running enemy
			
		wall

	game

		start work on a real level

	tools
	
		add a flag when exporting an animation to export the other side too	
			*_flipped
			
		for sprites that are loaded completely into vdp ram,
		have a setting that creates a flipped version

	what kind of game objects?
		visible game objects (enemies, pick ups, effects, etc)
		invisible triggers
		invisible objects like a music manager
		tile animator

	have object always switch to their animation's bank when calling update function?
		and the draw function?
		do both at the same time?

	Game
	
		rock particles don't appear in the correct position on screen when spawned
	
	Engine
	
		store animated tiles only in bank 0/1?

	space pass

		compress standard animations

		compress tileset
		
		decompress tileset
	
		find ways to save rom space with animations
		
			for streaming animations, only store the tile differences in an animation
			copy the tile differences only to 

	BuildMaster
	
		building .c files seems to eat warnings and some errors, causing a freeze
		
		compile using multiple parallel processes
	
	performance pass

		particles and projetiles are expensive

		improve buildcolumn performance
			do a bit every frame
			
			I already know how many tiles I have to update

		unroll loop to update terrain buffer


	Engine

		raster effects
	
		go to next level

	
	that thing where I swap in and out parts of the background
		the ground and the sky need to be separate tilesets
	
		ground/sky/animated
	
	compress map data
		where do I uncompress it? ram? is there room?
		
	store map data column first
	
	move sprites into the first half of tile vdp memory
		reduce the handling of resourceinfo index size from 16bit to 8 bit
	
	don't do everything at the same time during vblank
		- update player animation
		- update animated tiles
		- modify map tiles
		- animate tile-based objects
		- etc.
	
	
	clipping????
	
		regular animations
		
		batched animations
	
		gg2c, on export, sort sprites in a frame by X position
			then clip by x position
	
	
	automated creation of header file with object_type_ids
		header file with #defines of GAMEOBJECT_PLAYER_ID
		array of create functions in ROM
		"last checked" compares against time stamps of all cpp files with GAME_OBJECT_CREATE tag 
			if older than at least one of the animations, rebuild.
	
	automated creation of header file with VDPtileLocations (and animations?)
		array of VDPTileLocations in ram
		array of animations in rom
		header file with #defines PLAYER_ANIMATION_ID
		"last hecked"

	work in points

	place game objects on the map
	
	optimization pass
		object manager
			no loops
			no array
				just five objects
		scroll manager
			unroll rool to fill buffer
			or assembly?
				ask chat gpt

	add player standing state
	add player moving state
	
	player collisions
	physics
	
	clipping
	

	slopes?
	
	create assert 
		black screen?
		print message
			file/line


	try the SDCC Visual Studio project
		maybe debugging works well?

	
