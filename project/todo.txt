Todo

	SceneMaster
			
		auto reload of Tiled map on change
			
		animated tiles to into bank 0/1?
			
		detect that the game needs building before doing anything
	
		editor properties
			IsUnique - only one instance is allowed
				player

	
		run application as command line tool
				
		A toolbar buttong to Build and run level
				
		remember last camera position and zoom

		make sprites from graphic gale frames transparent


	what kind of game objects?
		visible game objects (enemies, pick ups, effects, etc)
		invisible triggers
		invisible objects like a music manager
		tile animator

	have object switch to their animation's bank when calling update function?



	space pass

		compress standard animations

		compress tileset
		
		decompress tileset
	
		find ways to save rom space with animations
		
			for streaming animations, only store the tile differences in an animation
			copy the tile differences only to 


	
	performance pass

		particles and projetiles are expensive

		improve buildcolumn performance
			do a bit every frame
			
			I already know how many tiles I have to update

		unroll loop to update terrain buffer


	Engine

		raster effects
	
		go to next level

	
	that thing where I swap in and out parts of the background
		the ground and the sky need to be separate tilesets
		
		build a map out of multiple tilesets
		
		ground/sky/animated

		
	make gg2c not suck
	make gal2tmx not suck	
		
	compress map data
		
	store map data column first
	
	don't do everything at the same time during vblank
		- update player animation
		- update animated tiles
		- modify map tiles
		- animate tile-based objects
		- etc.
	
	
	clipping????
	
		regular animations
		
		batched animations
	
		gg2c, on export, sort sprites in a frame by X position
			then clip by x position
	
	
	automated creation of header file with object_type_ids
		header file with #defines of GAMEOBJECT_PLAYER_ID
		array of create functions in ROM
		"last checked" compares against time stamps of all cpp files with GAME_OBJECT_CREATE tag 
			if older than at least one of the animations, rebuild.
	
	automated creation of header file with VDPtileLocations (and animations?)
		array of VDPTileLocations in ram
		array of animations in rom
		header file with #defines PLAYER_ANIMATION_ID
		"last hecked"

	work in points

	place game objects on the map
	
	optimization pass
		object manager
			no loops
			no array
				just five objects
		scroll manager
			unroll rool to fill buffer
			or assembly?
				ask chat gpt

	add player standing state
	add player moving state
	
	player collisions
	physics
	
	clipping
	

	slopes?
	
	create assert 
		black screen?
		print message
			file/line


	try the SDCC Visual Studio project
		maybe debugging works well?

	
