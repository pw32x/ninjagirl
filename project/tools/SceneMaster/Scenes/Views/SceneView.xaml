<UserControl x:Class="SceneMaster.Scenes.Views.SceneView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters="http://schemas.microsoft.com/netfx/2009/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:SceneMaster.Controls"
             xmlns:viewmodels="clr-namespace:SceneMaster.Scenes.ViewModels" 
             xmlns:smconverters="clr-namespace:SceneMaster.Converters"
             mc:Ignorable="d"
             d:DataContext ="{d:DesignInstance viewmodels:SceneViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="301" d:DesignWidth="512"
             x:Name="SceneMasterSceneView"
             DataContextChanged="SceneMasterSceneView_DataContextChanged"
             SizeChanged="SceneMasterSceneView_SizeChanged">
    <UserControl.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <smconverters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
    </UserControl.Resources>    
    <Grid  x:Name="ParentGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>
        <ScrollViewer Grid.Row="0"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto">

                <controls:ZoomBorderCustom x:Name="ZoomBorder" 
                                ZoomSpeed="1.2"
                                Background="SlateBlue" 
                                ClipToBounds="True" 
                                Focusable="True"
                                PanButton="Middle" 
                                Stretch="None"
                                VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch">
                    <Grid x:Name="MainGrid" 
                          Background="Beige" 
                          HorizontalAlignment="Center" 
                          VerticalAlignment="Center">
                        <Image x:Name="TileMapBitmapImage"  Source="{Binding Scene.TiledMapBitmapSource}"
                               RenderOptions.BitmapScalingMode="NearestNeighbor"
                               LayoutUpdated="TileMapBitmapImage_LayoutUpdated"
                               MouseLeftButtonDown="Image_MouseLeftButtonDown" 
                               Stretch="None" />
                        <!--
                        <Image x:Name="TerrainBitmapSource"  Source="{Binding Scene.TerrainBitmapSource}"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor"
                                   Stretch="None"
                               IsHitTestVisible="False"/>
                        -->
                        <Canvas x:Name="GridCanvas" IsHitTestVisible="False"/>
                        <ItemsControl ItemsSource="{Binding EditorObjectViewModels}" >
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Canvas.Left" Value="{Binding SnappedX}" />
                                    <Setter Property="Canvas.Top" Value="{Binding SnappedY}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <controls:EditorObjectControl Canvas.Left="{Binding SnappedX}" 
                                                                  Canvas.Top="{Binding SnappedY}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <ItemsControl ItemsSource="{Binding EditorObjectViewModels}" >
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <Canvas />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Canvas.Left" Value="{Binding SpawnX}" />
                                    <Setter Property="Canvas.Top" Value="{Binding SpawnY}" />
                                </Style>
                            </ItemsControl.ItemContainerStyle>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <controls:EditorObjectSpawnPointControl Canvas.Left="{Binding SpawnX}" 
                                                                            Canvas.Top="{Binding SpawnY}"
                                                                            Visibility="{Binding SpawnPointIsIndependant, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>


                    <ItemsControl ItemsSource="{Binding EditorObjectViewModels}" >
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>


                        <ItemsControl.ItemTemplate>
                            <DataTemplate>

                                <Line X1="{Binding X}" 
                                      Y1="{Binding Y}" 
                                      X2="{Binding SpawnX}" 
                                      Y2="{Binding SpawnY}" 
                                      Stroke="DarkBlue" 
                                      StrokeThickness="1"
                                      Visibility="{Binding SpawnPointIsIndependant, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Line.StrokeDashArray>
                                        <DoubleCollection>2 4</DoubleCollection>
                                        <!-- Adjust the values to change the pattern -->
                                    </Line.StrokeDashArray>
                                </Line>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <Canvas Visibility="{Binding SelectedEditorObjectViewModel, Converter={StaticResource NullToVisibilityConverter}}">
                            <Border DataContext="{Binding SelectedEditorObjectViewModel}"
                                    Visibility="{Binding SpawnPointIsIndependant, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Canvas.Left="{Binding SpawnAreaX}"
                                    Canvas.Top="0"
                                    Height="192"
                                    Width="256"
                                    Background="Transparent"
                                    BorderThickness="1"
                                    IsHitTestVisible="False"
                                    BorderBrush="Black">
                               
                            </Border>
                        </Canvas>

                    </Grid>
                </controls:ZoomBorderCustom>
        </ScrollViewer>

        <StatusBar Grid.Row="1">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Scene.TiledMapFilename}" d:Text="Path To Tiled Map"/>
                <Button Content="Reset" Click="Button_ClickReset"/>
            </StackPanel>
        </StatusBar>
    </Grid>
</UserControl>
